#version 330

// Incoming per vertex
in vec4	vVertex;
in vec3 vNormal;
in vec2 vTexCoords;

// Set per batch
uniform vec3	vLightPosition;
uniform mat4	mvpMatrix;
uniform mat4	mvMatrix;
uniform mat3	normalMatrix;
uniform bool	bIsDoubleLayer;
uniform bool	bObserverLight;

// Outs
smooth out float lightIntensity;
smooth out vec2 vVaryingTexCoords;

void main(void) 
{ 
    // Get surface normal in eye coordinates
    vec3 vEyeNormal = normalMatrix * vNormal;

    // Get vertex position in eye coordinates
    vec4 vPosition4 = mvMatrix * vVertex;
    vec3 vPosition3 = vPosition4.xyz / vPosition4.w;

    vec3 vTmpLightPosition = vLightPosition;
    if(bObserverLight){
    	vTmpLightPosition = vec3(0.0f, 0.0f, 0.0f);
    }

    // Get vector to light source
    vec3 vLightDir = normalize(vTmpLightPosition - vPosition3);

    // Dot product gives us diffuse intensity
    float tmpIntensity = dot(vEyeNormal, vLightDir);
    if(bIsDoubleLayer){
    	lightIntensity = abs(tmpIntensity);
    }
    else {
    	lightIntensity = max(0.0, tmpIntensity);
    }

	vVaryingTexCoords = vTexCoords;
	gl_Position = mvpMatrix * vVertex;
}
